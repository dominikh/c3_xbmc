<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
    <episodedetails>
    <showtitle>Chaos Communication Congress</showtitle>
    <season>30</season>
    <episode>39</episode>
    <title>BREACH in Agda</title>
    <outline>None</outline>
    <year>2013</year>
    <id>5394</id>
    <plot>
        Software engineering is in a unsustainable state: software is mainly developed in a trial and error fashion, which always leads to vulnerable systems. Several decades ago the correspondence between logics and programming (Curry-Howard) was found. This correspondence is now being used in modern programming languages using dependent types, such as Agda, Coq, and Idris.

In this talk I show our development of attacks and security notions within Agda, using the recent <a href="https://en.wikipedia.org/wiki/BREACH_%28security_exploit%29">BREACH</a> exploit as an example. Our development is a constructive step towards verified software and bridges a gap between theory and practice.
I will explain the details about the Curry-Howard correspondence.
The target audience are interested people with some programming experience.
    </plot>
    <genre>Talk</genre>
    <tag>Science & Engineering</tag>
    <actor>
        <name>Nicolas Pouillard</name>
        <role></role>
    </actor>
    </episodedetails>